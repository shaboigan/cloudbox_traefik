#########################################################################
# Title:         Cloudbox: Pre-Tasks                                    #
# Author(s):     desimaniac                                             #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Set User Variables
  import_tasks: "subtasks/user.yml"
  tags: always

- name: Clean Paths
  import_tasks: "subtasks/clean_paths.yml"
  tags: always

- name: Set Cloudbox Variables
  import_tasks: "subtasks/variables.yml"
  tags: always

- name: Set Cloudbox Role Variables
  import_tasks: "subtasks/role_variables.yml"
  tags: always

- name: APT Tasks
  import_tasks: "subtasks/apt.yml"
  tags: always

- name: "Set Cloudbox Type to 'cloudbox'"
  set_fact:
    cloudbox_type: "cloudbox"
  tags: cloudbox

- name: "Set Cloudbox Type to 'mediabox'"
  set_fact:
    cloudbox_type: "mediabox"
  tags: mediabox

- name: "Set Cloudbox Type to 'feederbox'"
  set_fact:
    cloudbox_type: "feederbox"
  tags: feederbox

- name: "Set Backup config settings"
  block:

  - name: "Decrypt | Check 'backup_config.yml' for encryption"
    shell: "head -1 {{ playbook_dir }}/backup_config.yml | grep -q \\$ANSIBLE_VAULT"
    register: encryption_check
    ignore_errors: yes
    changed_when: no
    failed_when: encryption_check.rc > 1
  
  - name: "Decrypt | Set 'file_is_encrypted' variable"
    set_fact:
      file_is_encrypted: "{{ ((encryption_check.rc == 0) | default(false,true)) }}"
  
  - name: "Decrypt | Decrypt 'backup_config.yml' when encrypted"
    shell: "ansible-vault decrypt {{ playbook_dir }}/backup_config.yml"
    become: yes
    become_user: "{{ cloudbox_yml.stat.pw_name }}"
    when: file_is_encrypted
  
  - name: "Set Cloudbox Type in backup_config"
    replace:
      path: "~/cloudbox/backup_config.yml"
      regexp: 'Cloudbox'
      replace: "{{ cloudbox_type }}"
  
  - name: "Set rclone remote in backup_config"
    replace:
      path: "~/cloudbox/backup_config.yml"
      regexp: 'rclone.remote'
      replace: "{{ rclone.remote }}"
  
  - name: "Re-encrypt | Re-encrypt 'backup_config.yml' if previously encrypted"
    shell: "ansible-vault encrypt {{ playbook_dir }}/backup_config.yml"
    become: yes
    become_user: "{{ cloudbox_yml.stat.pw_name }}"
    when: file_is_encrypted

  tags:
    - cloudbox
    - mediabox
    - feederbox

- name: Sub Domain Tasks
  block:

  ## Add cloudbox_type subdomain
  - name: "Cloudflare: Add '{{ cloudbox_type }}' subdomain to '{{ user.domain }}'"
    import_tasks: "subtasks/add_subdomain.yml"
    tags:
      - cloudbox
      - mediabox
      - feederbox

  ## Remove cloudbox subdomain for Mediabox/Feederbox setups.
  - name: "Cloudflare: Remove 'cloudbox' subdomain from '{{ user.domain }}'"
    import_tasks: "subtasks/remove_subdomain.yml"
    tags:
      - mediabox
      - feederbox

  when: (cloudflare_enabled) and ('pre_tasks' not in ansible_run_tags)
