#########################################################################
# Title:         Cloudbox: Shell Role | Zsh Tasks                       #
# Author(s):     desimaniac, l3uddz                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: Zsh | Install 'zsh'
  apt: "name=zsh state=present"

- name: Zsh | Clone oh-my-zsh repo
  git:
    repo: https://github.com/robbyrussell/oh-my-zsh.git
    dest: "/home/{{ user.name }}/.oh-my-zsh"
    clone: yes
    version: HEAD
    force: yes
  become: yes
  become_user: "{{ user.name }}"
  register: cloning
  ignore_errors: yes

- name: "Zsh | Check if an existing .zshrc file is present"
  stat:
    path: "/home/{{ user.name }}/.zshrc"
  register: existing_zshrc

- name: "Zsh | Create /home/{{ user.name }}/.zshrc file"
  copy:
    src: /home/{{ user.name }}/.oh-my-zsh/templates/zshrc.zsh-template
    dest: /home/{{ user.name }}/.zshrc
    group: "{{ user.name }}"
    owner: "{{ user.name }}"
  when: (cloning is success) and (not existing_zshrc.stat.exists)

- name: Zsh | Set default editor to nano in .zshrc
  lineinfile:
    dest: "/home/{{ user.name }}/.zshrc"
    regexp: "^export EDITOR="
    line: "export EDITOR=nano"
    state: present

- name: Zsh | Set update prompt to always default true
  lineinfile:
    dest: "/home/{{ user.name }}/.zshrc"
    insertbefore: ^source\s\$ZSH\/oh-my-zsh\.sh
    line: "DISABLE_UPDATE_PROMPT=true"
    state: present

# Allows commmands to run with the un-expanded glob
- name: Zsh | Set option 'nomatch'
  lineinfile:
    dest: "/home/{{ user.name }}/.zshrc"
    line: "unsetopt nomatch"
    state: present

- name: "Zsh | Check if /bin/zsh exists"
  stat:
    path: /bin/zsh
  register: bin_zsh

- name: "Zsh | Create alternatives link to /bin/zsh"
  alternatives:
    name: zsh
    link: /bin/zsh
    path: /bin/zsh5
  when: not bin_zsh.stat.exists

- name: Zsh | Set zsh as default shell
  user:
    name: "{{ user.name }}"
    shell: /bin/zsh
  register: default_shell

- name: "Zsh | Default shell set to: Zsh"
  debug:
    msg:
      - "Default shell set to: ZSH"
  when: (default_shell is changed)

- name: "Zsh | Default shell set to: Zsh"
  debug:
    msg:
      - "Changes will apply on session restart."
  when: (default_shell is changed) and ('shell' in ansible_run_tags)
