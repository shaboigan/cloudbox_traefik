#########################################################################
# Title:         Cloudbox: Jackett Role                                 #
# Author(s):     l3uddz, desimaniac                                     #
# URL:           https://github.com/cloudbox/cloudbox                   #
# Docker Image:  hotio/jackett                                          #
# --                                                                    #
#         Part of the Cloudbox project: https://cloudbox.works          #
#########################################################################
#                   GNU General Public License v3.0                     #
#########################################################################
---
- name: "Set DNS Record on CloudFlare"
  include_role:
    name: cloudflare-dns
  vars:
    subdomain: jackett
  when: cloudflare_enabled

- name: Slurp hashed htpasswd
  slurp:
    src: "/opt/traefik_v2/.htpasswd"
  register: hashed

- name: Set hashed password
  set_fact:
    htpasswd: "{{ hashed['content'] | b64decode }}"

- name: Stop and remove any existing container
  docker_container:
    name: jackett
    state: absent

- name: Set vpn host container
  block:

  - name: Check if deluge is using vpn
    stat:
      path: "/opt/deluge/openvpn/config.ovpn"
    register: deluge_vpn

  - name: Set deluge as the vpn host container
    set_fact:
      vpn_host: deluge
    when: deluge_vpn.stat.exists

  - name: Check if sabnzbd is using vpn
    stat:
      path: "/opt/sabnzbd/openvpn/config.ovpn"
    register: sabnzbd_vpn

  - name: Set sabnzbd as the vpn host container
    set_fact:
      vpn_host: sabnzbd
    when: sabnzbd_vpn.stat.exists

  when: (vpn.enable|default(false,true))

- name: Create jackett directories
  file: "path={{ item }} state=directory mode=0775 owner={{ user.name }} group={{ user.name }}"
  with_items:
    - /opt/jackett

- name: Create and start container
  docker_container:
    name: jackett
    image: hotio/jackett
    pull: yes
    network_mode: "container:{{ vpn_host }}"
    env:
      BACKUP: "no"
      PUID: "{{ uid }}"
      PGID: "{{ gid }}"
      UMASK: 002
      TZ: "{{ tz }}"
    volumes:
      - "/opt/jackett:/config"
    labels:
      traefik.enable: "true"
      traefik.http.routers.jackett.entrypoints: "http"
      traefik.http.routers.jackett.rule: "Host:jackett.{{ user.domain }}"
      traefik.http.routers.jackett.middlewares: "https-redirect@file"
      traefik.http.routers.jackett-secure.entrypoints: "https"
      traefik.http.routers.jackett-secure.rule: "Host:jackett.{{ user.domain }}"
      traefik.http.routers.jackett-secure.tls: "true"
      traefik.http.routers.jackett-secure.tls.certresolver: "http"
      traefik.http.routers.jackett-secure.service: "jackett"
      traefik.http.services.jackett.loadbalancer.server.port: "9117"
      traefik.docker.network: "cloudbox"
      "com.github.cloudbox.cloudbox_managed": "true"
    networks:
      - name: cloudbox
        aliases:
          - jackett
    purge_networks: yes
    restart_policy: unless-stopped
    state: started
